{"version":3,"sources":["styles/App.js","styles/Global.js","styles/Cards.js","components/Card.js","components/MetaData.js","components/App.js","styles/Theme.jsx","index.js"],"names":["Container","styled","div","_templateObject","Object","taggedTemplateLiteral","_ref","theme","colors","maintext","Btn","button","_templateObject2","_ref2","_ref3","_ref4","hover","_ref5","GlobalStyle","createGlobalStyle","Global_templateObject","fonts","main","mainbg","CardGrid","Cards_templateObject","SingleCard","Cards_templateObject2","Card","card","handleChoice","flipped","disabled","react_default","a","createElement","key","id","className","src","alt","onClick","MetaData","index_module","rel","href","crossorigin","cardImgs","matched","App","_useState","useState","_useState2","slicedToArray","cards","setCards","_useState3","_useState4","turns","setTurns","_useState5","_useState6","cardOne","setCardOne","_useState7","_useState8","cardTwo","setCardTwo","_useState9","_useState10","setDisabled","shuffleCards","shuffledCards","concat","sort","Math","random","map","objectSpread","useEffect","PrevCards","resetTurn","setTimeout","console","log","prevTurn","Fragment","components_MetaData","components_Card","weights","thin","lighter","light","regular","medium","sbold","bold","xbold","Theme","children","styled_components_browser_esm","ReactDOM","render","StrictMode","styles_Theme","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.cef07936.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div `\n    max-width: 860px;\n    margin: 40px auto;\n    h1 {\n      color: ${({ theme }) => theme.colors.maintext};\n    }\n`\n\nexport const Btn = styled.button `\n  background: none;\n  border: 2px solid ${({ theme }) => theme.colors.maintext};\n  padding: 6px 12px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.maintext};\n  font-weight: bold;\n  cursor: pointer;\n  font-size: 1em;\n  :hover {\n    background: ${({theme}) => theme.colors.hover};\n    color: ${({ theme }) => theme.colors.maintext};\n  }\n`","import { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n    font-family: ${({theme}) => theme.fonts.main};\n    margin: 0;\n    font-size: 1.5em;\n    text-align: center;\n    background: ${({theme}) => theme.colors.mainbg};\n    color: ${({theme}) => theme.colors.maintext};\n}\n`","import styled from \"styled-components\";\n\nexport const CardGrid = styled.div`\n    margin-top: 40px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-gap: 20px; \n`\n\nexport const SingleCard = styled.div`\n    position: relative;\n    img {\n        width: 100%;\n        display: block;\n        border: 2px solid ${({theme}) => theme.colors.maintext};\n        border-radius: 6px;\n    }\n    .front {\n        transform: rotateY(90deg);\n        transition: all ease-in 0.2s;\n        position: absolute;\n    }\n    .flipped .front {\n        transform: rotateY(0deg);\n        transition-delay: 0.2s;\n    }\n    .back {\n        transition: all ease-in 0.2s;\n        transition-delay: 0.2s;\n    }\n    .flipped .back {\n        transform: rotateY(90deg);\n        transition-delay: 0s;\n    }\n`\n","import React from 'react'\nimport { SingleCard } from '../styles/Cards'\n\nfunction Card({card, handleChoice, flipped, disabled}) {\n\n    const handleClick = () => {\n        if (!disabled) {\n            handleChoice(card)\n        } \n    }\n\n    return (\n        <SingleCard key={card.id}>\n            <div className={flipped ? \"flipped\" : \"\"}>\n                <img src={card.src} alt=\"card back\" className=\"front\" />\n                <img src=\"img/cover.png?raw=true\" alt=\"card back\" className=\"back\" onClick={handleClick}/>\n            </div>\n        </SingleCard>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport {Helmet, HelmetProvider } from 'react-helmet-async'\n\nfunction MetaData() {\n    return (\n        <div>\n           <HelmetProvider> \n            <Helmet>\n                <title>Memory Game</title>\n                <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n                <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n                <link href=\"https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400;500;600;700;800&display=swap\" rel=\"stylesheet\"/>\n            </Helmet>\n            </HelmetProvider>\n        </div>\n    )\n}\n\nexport default MetaData\n","import React, { useState, useEffect } from 'react';\nimport { Btn, Container } from '../styles/App'\nimport { GlobalStyle } from '../styles/Global'\nimport Card from './Card';\nimport { CardGrid } from '../styles/Cards';\nimport MetaData from './MetaData';\n\nconst cardImgs = [\n  {\n    \"src\": \"img/helmet-1.png?raw=true\",\n    matched: false\n  },\n  {\n    \"src\": \"img/potion-1.png?raw=true\",\n    matched: false\n  },\n  {\n    \"src\": \"img/ring-1.png?raw=true\",\n    matched: false\n  },\n  {\n    \"src\": \"img/scroll-1.png?raw=true\",\n    matched: false\n  },\n  {\n    \"src\": \"img/shield-1.png?raw=true\",\n    matched: false\n  },\n  {\n    \"src\": \"img/sword-1.png?raw=true\",\n    matched: false\n  }\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [cardOne, setCardOne] = useState(null)\n  const [cardTwo, setCardTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    //! duplicate images\n    const shuffledCards = [...cardImgs, ...cardImgs]\n      .sort(() => Math.random() - 0.5) //! shuffle cards (less than 0, order stays the same, bigger than 0 order changes)\n      .map((card) => ({ ...card, id: Math.random })) //! add random id\n\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  //? handle a choice\n  const handleChoice = (card) => {\n    //! if cardOne = null, update cardOne state (select the card as the first choice)\n    //! else update cardTwo state (select the card as the second choice)\n\n    cardOne ? setCardTwo(card) : setCardOne(card)\n  }\n\n  //? compare cards using source (card.src?) and see if they match, if they do, output to the console (match!) if not log that to the console\n  useEffect(() => {\n    if (cardOne && cardTwo) {\n      setDisabled(true) //? make cards unclickable until this check ran\n      if (cardOne.src === cardTwo.src) {\n        setCards(PrevCards => {\n          return PrevCards.map(card => {\n            if (card.src === cardOne.src) {\n              return { ...card, matched: true }\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [cardOne, cardTwo])\n  console.log(cards)\n\n  //! reset state and add to turns\n  const resetTurn = () => {\n    setCardOne(null)\n    setCardTwo(null)\n    setTurns(prevTurn => prevTurn + 1)\n    setDisabled(false)\n  }\n\n  //! start a new game automatically\n  useEffect(() => {\n    shuffleCards()\n    setCardOne(null)\n    setCardTwo(null)\n  }, [])\n\n  return (\n    <>\n      <MetaData />\n      <GlobalStyle />\n      <Container>\n        <h1>Magic Match</h1>\n        <Btn onClick={shuffleCards}>New Game</Btn>\n\n        <CardGrid>\n          {cards.map((card) => (\n            <Card\n              key={card.id}\n              card={card}\n              handleChoice={handleChoice}\n              flipped={card === cardOne || card === cardTwo || card.matched}\n              //! when should flipped return true\n              //? first card the user chooses\n              //? second card the user chooses\n              //? cards match\n              disabled={disabled}\n            />\n          ))}\n        </CardGrid>\n        <p className=\"turn\">Turns: {turns}</p>\n      </Container>\n    </>\n  );\n}\n\nexport default App","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n    colors: {\n        mainbg: '#1b1523',\n        maintext: '#fff',\n        hover: '#c23866',\n    },\n    fonts: {\n        main: \"'Raleway', sans- serif;\"\n    },\n    weights: {\n        thin: 100,\n        lighter: 200,\n        light: 300,\n        regular: 400,\n        medium: 500,\n        sbold: 600,\n        bold: 700,\n        xbold: 800,\n    }\n}\n\nconst Theme = ({children}) => {\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n\nexport default Theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Theme from './styles/Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Theme>\n      <App />\n    </Theme>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}